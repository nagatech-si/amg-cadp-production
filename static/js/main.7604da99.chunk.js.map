{"version":3,"sources":["application/selectors/ui.jsx","application/actions/ui.jsx","application/selectors/login.jsx","infrastructure/router/RouteLink.jsx","infrastructure/router/breadcrumb-map.jsx","App.js","serviceWorker.js","infrastructure/services/logger/console.jsx","infrastructure/services/local/write-local.jsx","infrastructure/services/local/get-local.jsx","infrastructure/axios/post.jsx","infrastructure/shared/static.jsx","infrastructure/services/api/login/index.jsx","infrastructure/axios/get.jsx","infrastructure/axios/delete.jsx","infrastructure/axios/put.jsx","infrastructure/services/index.jsx","infrastructure/services/api/index.jsx","infrastructure/services/api/laporanstockglobalproduksi/index.jsx","infrastructure/services/api/kirimsaldotahun/index.jsx","application/reducers/login.jsx","application/reducers/ui.jsx","application/reducers/laporanstockglobalproduksi.jsx","application/actions/kirimsaldotahun.jsx","application/reducers/kirimsaldotahun.jsx","application/reducers/index.jsx","application/middleware/ui.jsx","infrastructure/shared/sweetalert.jsx","application/store.jsx","application/middleware/login.jsx","application/middleware/laporanstockglobalproduksi.jsx","application/middleware/kirimsaldotahun.jsx","application/middleware/index.jsx","index.js","application/actions/login.jsx","application/actions/laporanstockglobalproduksi.jsx"],"names":["data","getLoading","state","ui","loading","getBtnLoading","btnLoading","getTypeTableLayout","typeTable","PAGE_LOADED_LOGIN","SET_LOADING_ON","SET_LOADING_OFF","BUTTON_LOADED","SET_LOADING_BUTTON_ON","SET_LOADING_BUTTON_OFF","CHANGE_TABLE_LAYOUT","pageLoadedLogin","type","setLoading","isLoading","payload","setLoadingButton","setTableLayout","feedbackLogin","login","feedback","getIsLogin","isLogin","DashboardPage","lazy","LoginPage","LaporanStockGlobalProduksiPage","LaporanKirimSaldoTahunPage","NotFound","RouteLink","fallback","path","exact","component","breadcrumbNameMap","App","Header","Layout","Footer","Content","Sider","SubMenu","Menu","dispatch","useDispatch","useSelector","today","Date","useLocation","pathSnippets","pathname","split","filter","i","extrabreadcrumbItems","map","_","index","url","slice","join","Item","breadcrumbItems","concat","useEffect","checkLogin","background","loaderColor","style","minHeight","collapsible","className","color","textAlign","theme","defaultSelectedKeys","mode","defaultOpenKeys","includes","icon","HomeOutlined","href","ReadOutlined","title","padding","paddingRight","gutter","xs","sm","offset","paddingLeft","fontSize","toLocaleDateString","span","SettingOutlined","ItemGroup","onClick","localStorage","clear","margin","height","marginTop","Boolean","window","location","hostname","match","log","console","writeLocal","nama","setItem","JSON","stringify","getLocal","parse","getItem","listExport","AxiosPost","a","headers","language","timeout","axios","post","response","value","error","AxiosPostLogin","baseurl","process","URL_LOGIN","URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI","URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI","URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI","URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI","doLogin","word","AxiosGet","percentComplete","config","onUploadProgress","progressEvent","Math","floor","loaded","total","get","percentCompleted","AxiosDelete","delete","AxiosPut","put","services","api","laporanStockGlobalProduksi","getAllLaporanStockGlobalProduksi","AxiosGetBody","addLaporanStockGlobalProduksi","datakirim","deleteLaporanStockGlobalProduksi","deleteAxios","editLaporanStockGlobalProduksi","kirimsaldotahun","getAllKirimsaldotahun","URL_GET_ALL_KIRIM_SALDO_TAHUN","addKirimsaldotahun","URL_ADD_KIRIM_SALDO_TAHUN","deleteKirimsaldotahun","URL_DELETE_KIRIM_SALDO_TAHUN","editKirimsaldotahun","URL_UPDATE_KIRIM_SALDO_TAHUN","initialState","login1","action","LOGIN_SUCCESS","LOGIN_FAILED","SET_LOGIN_STATE","reducer","feedback_R","feedback_L","isEdit","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED","GET_ALL_KIRIM_SALDO_TAHUN","SET_DATA_KIRIM_SALDO_TAHUN_SUCCESS","SET_DATA_KIRIM_SALDO_TAHUN_FAILED","combineReducers","form","formReducer","next","getState","Failed","message","Swal","fire","text","Success","key","SEND_LOGIN","LoginForm","values","loginSuccess","sweetalert","user_id","password","content","setTimeout","success","duration","replace","loginFailed","CHECK_LOGIN","setLoginState","toast","GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI","FormLaporanGlobalProduksi","tgl","date","moment","tz","format","repair","tipe_laporan","setDataLaporanStockGlobalProduksiLSuccess","setDataLaporanStockGlobalProduksiRSuccess","reset","setDataLaporanStockGlobalProduksiLFailed","laporanstockglobalproduksi","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ReactDOM","render","store","createStore","reducers","applyMiddleware","middleware","f","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","sendLogin"],"mappings":"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","file":"static/js/main.7604da99.chunk.js","sourcesContent":["const getLoading = (state) => state.ui.loading;\r\nconst getBtnLoading = (state) => state.ui.btnLoading;\r\nconst getTypeTableLayout = (state) => state.ui.typeTable;\r\n\r\nconst data = { getLoading, getBtnLoading, getTypeTableLayout };\r\n\r\nexport default data;\r\n","export const PAGE_LOADED_LOGIN = '[ui] page loaded login';\r\nexport const SET_LOADING_ON = '[ui] page loading on';\r\nexport const SET_LOADING_OFF = '[ui] page loading off';\r\nexport const BUTTON_LOADED = '[ui] button loaded';\r\nexport const SET_LOADING_BUTTON_ON = '[ui] button loading on';\r\nexport const SET_LOADING_BUTTON_OFF = '[ui] button loading off';\r\nexport const TABLE_LAYOUT = '[ui] table layout';\r\nexport const CHANGE_TABLE_LAYOUT = '[ui] table layout L';\r\n// export const SET_TABLE_LAYOUT_E = '[ui] table layout E';\r\n\r\n// ini adalah action yang nantinya akan dipanggil di middleware\r\nexport const pageLoadedLogin = {\r\n  type: PAGE_LOADED_LOGIN,\r\n};\r\n\r\nexport const buttonLoaded = {\r\n  type: BUTTON_LOADED,\r\n};\r\n\r\nexport const tableLayout = {\r\n  type: TABLE_LAYOUT,\r\n};\r\n\r\nexport const setLoading = (isLoading) => ({\r\n  type: isLoading ? SET_LOADING_ON : SET_LOADING_OFF,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const setLoadingButton = (isLoading) => ({\r\n  type: isLoading ? SET_LOADING_BUTTON_ON : SET_LOADING_BUTTON_OFF,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const setTableLayout = (typeTable) => ({\r\n  type: CHANGE_TABLE_LAYOUT,\r\n  payload: typeTable,\r\n});\r\n","const feedbackLogin = (state) => state.login.feedback;\r\nconst getIsLogin = (state) => state.login.isLogin;\r\n\r\nconst data = {\r\n  feedbackLogin,\r\n  getIsLogin,\r\n};\r\n\r\nexport default data;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst DashboardPage = lazy(() => import('../../views/pages/dashboard'));\r\nconst LoginPage = lazy(() => import('../../views/pages/login'));\r\nconst LaporanStockGlobalProduksiPage = lazy(() =>\r\n  import('../../views/pages/laporan/stock_global_produksi/laporanstockglobalproduksi'),\r\n);\r\nconst LaporanKirimSaldoTahunPage = lazy(() =>\r\n  import('../../views/pages/laporan/kirim_saldo_tahunan/laporankirimsaldotahun'),\r\n);\r\nconst NotFound = lazy(() => import('../../views/pages/notfoundpage'));\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const RouteLink = () => {\r\n  return (\r\n    <Suspense fallback={<div />}>\r\n      <Switch>\r\n        <Route path=\"/amg-cadp-production\" exact component={LoginPage} />\r\n        <Route path=\"/amg-cadp-production/dashboard\" component={DashboardPage} />\r\n        <Route path=\"/amg-cadp-production/laporan/stock-global-produksi\" component={LaporanStockGlobalProduksiPage} />\r\n        <Route path=\"/amg-cadp-production/laporan/kirim-saldo-tahun\" component={LaporanKirimSaldoTahunPage} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n","const breadcrumbNameMap = {\r\n  '/dashboard': 'Home',\r\n  '/laporan': 'Laporan',\r\n  '/laporan/stock-global-produksi': 'Stock Global Produksi',\r\n};\r\n\r\nexport default breadcrumbNameMap;\r\n","import React, { useEffect } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Row, Col } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './App.css';\r\nimport { HomeOutlined, ReadOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport Loading from 'react-fullscreen-loading';\r\nimport ui from './application/selectors/ui';\r\nimport login from './application/selectors/login';\r\nimport { pageLoadedLogin } from './application/actions/ui';\r\nimport { RouteLink } from './infrastructure/router/RouteLink';\r\nimport { checkLogin } from './application/actions/login';\r\nimport breadcrumbNameMap from './infrastructure/router/breadcrumb-map';\r\n\r\nfunction App() {\r\n  const { Header, Footer, Content, Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(ui.getLoading);\r\n  const isLogin = useSelector(login.getIsLogin);\r\n  const today = new Date();\r\n  const path = useLocation();\r\n  const pathSnippets = path.pathname.split('/').filter((i) => i);\r\n  const extrabreadcrumbItems = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return <Breadcrumb.Item>{breadcrumbNameMap[url]}</Breadcrumb.Item>;\r\n  });\r\n  const breadcrumbItems = [<Breadcrumb.Item key=\"home\">App</Breadcrumb.Item>].concat(\r\n    extrabreadcrumbItems,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(pageLoadedLogin);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(checkLogin);\r\n  }, [dispatch]);\r\n  if (loading) {\r\n    return <Loading loading background=\"rgba(0, 0, 0, 0.39)\" loaderColor=\"#3498db\" />;\r\n  }\r\n  return !isLogin ? (\r\n    <Layout style={{ height: '100vh' }}>\r\n      <Header>\r\n        <h3 style={{ color: 'white', textAlign: 'center', marginTop: 15 }}>CADP REPORT</h3>\r\n      </Header>\r\n      <Content style={{ height: '100vh' }}>\r\n        <div className=\"site-layout-content\">\r\n          <RouteLink />\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>D Design ©2021 Created by MDN</Footer>\r\n    </Layout>\r\n  ) : (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider collapsible>\r\n        <div className=\"logo\">\r\n          <h5 style={{ color: 'white', textAlign: 'center' }}>CADP REPORT</h5>\r\n        </div>\r\n        <Menu\r\n          theme=\"dark\"\r\n          defaultSelectedKeys={[path.pathname]}\r\n          mode=\"inline\"\r\n          defaultOpenKeys={path.pathname.includes('laporan') ? ['laporan'] : ''}\r\n        >\r\n          <Menu.Item key=\"/dashboard\" icon={<HomeOutlined />}>\r\n            <a href=\"/amg-cadp-production/dashboard\" className=\"link-menus\">\r\n              Dashboard\r\n            </a>\r\n          </Menu.Item>\r\n          <SubMenu key=\"laporan\" icon={<ReadOutlined />} title=\"Laporan\">\r\n            <Menu.Item key=\"/laporan/stock-global-produksi\">\r\n              <a href=\"/amg-cadp-production/laporan/stock-global-produksi\" className=\"link-menus\">\r\n                Stock Global Produksi\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/laporan/kirim-saldo-tahun\">\r\n              <a href=\"/amg-cadp-production/laporan/kirim-saldo-tahun\" className=\"link-menus\">\r\n                Kirim dan Saldo per Tahun\r\n              </a>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"site-layout-background\" style={{ padding: 0, paddingRight: 10 }}>\r\n          <Row gutter={{ xs: 8, sm: 16 }}>\r\n            <Col className=\"gutter-row\" offset={15} style={{ paddingLeft: 100 }}>\r\n              <span style={{ fontSize: 12, textAlign: 'right' }}>\r\n                Tanggal Hari Ini : {today.toLocaleDateString('id-ID')}\r\n              </span>\r\n            </Col>\r\n            <Col span={4} style={{ paddingLeft: 35 }}>\r\n              <Menu mode=\"horizontal\">\r\n                <SubMenu key=\"SubMenu\" icon={<SettingOutlined />} title=\"Pengaturan Akun\">\r\n                  <Menu.ItemGroup title=\"Pengaturan\">\r\n                    <Menu.Item key=\"setting:1\">Akun</Menu.Item>\r\n                    <Menu.Item key=\"setting:2\">\r\n                      <a\r\n                        href=\"/amg-cadp-production\"\r\n                        className=\"link-menus\"\r\n                        onClick={() => localStorage.clear()}\r\n                      >\r\n                        Log Out\r\n                      </a>\r\n                    </Menu.Item>\r\n                  </Menu.ItemGroup>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Col>\r\n          </Row>\r\n        </Header>\r\n        <Content style={{ margin: '0 16px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>{breadcrumbItems}</Breadcrumb>\r\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n            <RouteLink />\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>D Design ©2021 Created by MDN</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-use-before-define */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        const registrationWaiting = registration.waiting;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              Swal.fire({\r\n                text: 'Update Tersedia, Silahkan Tutup Tab Halaman ini dan buka kembali',\r\n                icon: 'info',\r\n                showConfirmButton: true,\r\n                position: 'center',\r\n                allowEscapeKey: false,\r\n                allowOutsideClick: false,\r\n                allowEnterKey: false,\r\n                footer:\r\n                  '<a href=\"https://octavian25.github.io/sambasmotor.com/\">Klik untuk buka halaman baru</a>',\r\n              }).then((res) => {\r\n                if (res.isConfirmed) {\r\n                  registrationWaiting.postMessage({ type: 'SKIP_WAITING' });\r\n                  registrationWaiting.addEventListener('statechange', (e) => {\r\n                    if (e.target.state === 'activated') {\r\n                      window.location.reload();\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// eslint-disable-next-line\r\nconst log = console.log;\r\n\r\nexport default log;\r\n","const writeLocal = (nama, data) => {\r\n  return localStorage.setItem(nama, JSON.stringify(data));\r\n};\r\n\r\nexport default writeLocal;\r\n","const getLocal = (nama) => {\r\n  return JSON.parse(localStorage.getItem(nama));\r\n};\r\n\r\nexport default getLocal;\r\n","import axios from 'axios';\r\n\r\nconst AxiosPost = async ({ url, data }) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    // const response = await axios.post(url, data, config);\r\n    const response = await axios.post(url, data);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\n\r\nconst AxiosPostLogin = async (url, data) => {\r\n  try {\r\n    const response = await axios.post(url, data);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\nconst listExport = { AxiosPost, AxiosPostLogin };\r\n\r\nexport default listExport;\r\n","const baseurl = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst URL_LOGIN = `${baseurl}users/login`;\r\n\r\nconst URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}`;\r\nconst URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}stock/report-global`;\r\nconst URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}`;\r\nconst URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}`;\r\n\r\nconst URL_GET_ALL_KIRIM_SALDO_TAHUN = `${baseurl}`;\r\nconst URL_ADD_KIRIM_SALDO_TAHUN = `${baseurl}`;\r\nconst URL_DELETE_KIRIM_SALDO_TAHUN = `${baseurl}`;\r\nconst URL_UPDATE_KIRIM_SALDO_TAHUN = `${baseurl}`;\r\n\r\nconst data = {\r\n  URL_LOGIN,\r\n  URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n};\r\n\r\nexport default data;\r\n","import post from '../../../axios/post';\r\nimport word from '../../../shared/static';\r\n\r\nconst login = {\r\n  doLogin: async (data) => {\r\n    const response = await post.AxiosPostLogin(word.URL_LOGIN, data);\r\n    return response;\r\n  },\r\n};\r\n\r\nexport default login;\r\n","import axios from 'axios';\r\n\r\nconst AxiosGet = async ({ url }) => {\r\n  try {\r\n    let percentComplete = 0;\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        percentComplete = Math.floor((progressEvent.loaded * 100) / progressEvent.total);\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    const response = await axios.get(url, config);\r\n    return {\r\n      value: response.data,\r\n      error: null,\r\n      percentCompleted: percentComplete,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      value: null,\r\n      error: error.response,\r\n    };\r\n  }\r\n};\r\n\r\nexport default AxiosGet;\r\n","import axios from 'axios';\r\n\r\nconst AxiosDelete = async (url, data) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    const response = await axios.delete(url, data, config);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\n\r\nexport default AxiosDelete;\r\n","import axios from 'axios';\r\n\r\nconst AxiosPut = async (url, data) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    const response = await axios.put(url, data, config);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\n\r\nexport default AxiosPut;\r\n","import console from './logger/console';\r\nimport elasticConsole from './logger/elastic-console';\r\nimport writeLocal from './local/write-local';\r\nimport elasticWriteLocal from './local/elastic-write-local';\r\nimport getLocal from './local/get-local';\r\nimport elasticGetLocal from './local/elastic-get-local';\r\nimport api from './api';\r\n\r\nconst env = process.env.REACT_APP_NODE_ENV;\r\n\r\nconst services = {\r\n  //  INI ADALAH PENDAFTARA MODULE YANG NANTINYA BISA DI EXPOSE KE LUAR ( MIDDLEWARE , DLL)\r\n  log: env === 'development' ? console : elasticConsole,\r\n  getLocal: env === 'development' ? getLocal : elasticGetLocal,\r\n  writeLocal: env === 'development' ? writeLocal : elasticWriteLocal,\r\n  api,\r\n};\r\n\r\nexport default services;\r\n","import login from './login';\r\nimport laporanStockGlobalProduksi from './laporanstockglobalproduksi';\r\nimport kirimsaldotahun from './kirimsaldotahun';\r\n\r\nconst api = { login, laporanStockGlobalProduksi, kirimsaldotahun };\r\n\r\nexport default api;\r\n","import get from '../../../axios/get';\r\nimport post from '../../../axios/post';\r\nimport deleteAxios from '../../../axios/delete';\r\nimport put from '../../../axios/put';\r\nimport word from '../../../shared/static';\r\n\r\nconst laporanStockGlobalProduksi = {\r\n  getAllLaporanStockGlobalProduksi: async (data) => {\r\n    const response = await get.AxiosGetBody(word.URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI, data);\r\n    return response;\r\n  },\r\n  addLaporanStockGlobalProduksi: async (datakirim) => {\r\n    const response = await post.AxiosPost({\r\n      url: word.URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n      data: datakirim,\r\n    });\r\n    return response;\r\n  },\r\n  deleteLaporanStockGlobalProduksi: async (data) => {\r\n    const response = await deleteAxios.AxiosDelete(\r\n      word.URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI + data,\r\n    );\r\n    return response;\r\n  },\r\n  editLaporanStockGlobalProduksi: async (url, data) => {\r\n    const response = await put.AxiosPut(word.URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI + url, data);\r\n    return response;\r\n  },\r\n};\r\n\r\nexport default laporanStockGlobalProduksi;\r\n","import get from \"../../../axios/get\";\r\nimport post from \"../../../axios/post\";\r\nimport deleteAxios from \"../../../axios/delete\";\r\nimport put from \"../../../axios/put\";\r\nimport word from \"../../../shared/static\";\r\n\r\nconst kirimsaldotahun = {\r\n  getAllKirimsaldotahun: async () => {\r\n\tconst response = await get.AxiosGet(word.URL_GET_ALL_KIRIM_SALDO_TAHUN);\r\n\treturn response;\r\n  },\r\n  addKirimsaldotahun: async (data) => {\r\n\tconst response = await post.AxiosPost(word.URL_ADD_KIRIM_SALDO_TAHUN, data);\r\n\treturn response;\r\n  },\r\n  deleteKirimsaldotahun: async (data) => {\r\n\tconst response = await deleteAxios.AxiosDelete(\r\n\t  word.URL_DELETE_KIRIM_SALDO_TAHUN + data\r\n\t);\r\n\treturn response;\r\n  },\r\n  editKirimsaldotahun: async (url, data) => {\r\n\tconst response = await put.AxiosPut(word.URL_UPDATE_KIRIM_SALDO_TAHUN + url, data);\r\n\treturn response;\r\n  },\r\n};\r\n\r\nexport default kirimsaldotahun;","import { LOGIN_FAILED, LOGIN_SUCCESS, SET_LOGIN_STATE } from '../actions/login';\r\n\r\nconst initialState = {\r\n  feedback: [],\r\n  error: null,\r\n  isLogin: false,\r\n};\r\n\r\nconst login1 = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return { feedback: action.payload, error: null };\r\n    case LOGIN_FAILED:\r\n      return { feedback: [], error: action.payload };\r\n    case SET_LOGIN_STATE:\r\n      return { isLogin: action.payload.data, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default login1;\r\n","import {\r\n  SET_LOADING_OFF,\r\n  SET_LOADING_ON,\r\n  SET_LOADING_BUTTON_ON,\r\n  SET_LOADING_BUTTON_OFF,\r\n  CHANGE_TABLE_LAYOUT,\r\n} from '../actions/ui';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  btnLoading: false,\r\n  typeTable: 'L',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING_ON:\r\n    case SET_LOADING_OFF:\r\n      return { ...state, loading: action.payload };\r\n    case SET_LOADING_BUTTON_ON:\r\n    case SET_LOADING_BUTTON_OFF:\r\n      return { ...state, btnLoading: action.payload };\r\n    case CHANGE_TABLE_LAYOUT:\r\n      return { ...state, typeTable: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","// Type your data here, it can be string, or any type of data, just write your variable\r\nimport {\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS,\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED,\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS,\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED,\r\n} from '../actions/laporanstockglobalproduksi';\r\n\r\nconst initialState = {\r\n  feedback_R: [],\r\n  feedback_L: [],\r\n  error: null,\r\n  isEdit: false,\r\n};\r\n\r\nconst laporanStockGlobalProduksi = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS:\r\n      return {\r\n        ...state,\r\n        feedback_L: action.payload.data,\r\n      };\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload.data,\r\n      };\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS:\r\n      return {\r\n        ...state,\r\n        feedback_R: action.payload.data,\r\n      };\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default laporanStockGlobalProduksi;\r\n","export const GET_ALL_KIRIM_SALDO_TAHUN = \"[kirimsaldotahun] get all kirimsaldotahun\";\r\nexport const SET_DATA_KIRIM_SALDO_TAHUN_SUCCESS = \"[kirimsaldotahun] get all kirimsaldotahun success\";\r\nexport const SET_DATA_KIRIM_SALDO_TAHUN_FAILED = \"[kirimsaldotahun] get all kirimsaldotahun failed\";\r\n\r\nexport const getAllKirimsaldotahun ={\r\n\ttype : GET_ALL_KIRIM_SALDO_TAHUN,\r\n}\r\nexport const setDataKirimsaldotahunSuccess =(feedback) => ({\r\n\ttype : SET_DATA_KIRIM_SALDO_TAHUN_SUCCESS,\r\n\tpayload : { data : feedback }\r\n})\r\nexport const setDataKirimsaldotahunFailed =(error) => ({\r\n\ttype : SET_DATA_KIRIM_SALDO_TAHUN_FAILED,\r\n\tpayload : { data : error }\r\n})","// Type your data here, it can be string, or any type of data, just write your variable\r\nimport {\r\nSET_DATA_KIRIM_SALDO_TAHUN_SUCCESS,\r\nSET_DATA_KIRIM_SALDO_TAHUN_FAILED,\r\n} from \"../actions/kirimsaldotahun\";\r\n\r\nconst initialState = {\r\nfeedback: [],\r\nerror: null,\r\nisEdit: false,\r\n};\r\n\r\nconst kirimsaldotahun = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\tcase SET_DATA_KIRIM_SALDO_TAHUN_SUCCESS :\r\n\t  return {\r\n\t\t...state,\r\n\t\tfeedback : action.payload.data\r\n\t  }\r\n\tcase SET_DATA_KIRIM_SALDO_TAHUN_FAILED :\r\n\t  return {\r\n\t\t...state,\r\n\t\terror : action.payload.data\r\n\t  }\r\n\tdefault:\r\n\t  return state;\r\n  }\r\n};\r\n\r\nexport default kirimsaldotahun;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport login from './login';\r\nimport ui from './ui';\r\nimport laporanStockGlobalProduksi from './laporanstockglobalproduksi';\r\nimport kirimsaldotahun from './kirimsaldotahun';\r\n\r\nexport default combineReducers({\r\n  login,\r\n  ui,\r\n  laporanStockGlobalProduksi,\r\n  kirimsaldotahun,\r\n  form: formReducer,\r\n});\r\n","import {\r\n  PAGE_LOADED_LOGIN,\r\n  setLoading,\r\n  BUTTON_LOADED,\r\n  setLoadingButton,\r\n  CHANGE_TABLE_LAYOUT,\r\n} from '../actions/ui';\r\n\r\nconst pageLoadedFlow =\r\n  ({ log }) =>\r\n  ({ dispatch }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === PAGE_LOADED_LOGIN) {\r\n      log('Page Login Loaded');\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\nconst buttonLoadedFlow =\r\n  ({ log }) =>\r\n  ({ dispatch }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === BUTTON_LOADED) {\r\n      log('Button Loaded');\r\n      dispatch(setLoadingButton(false));\r\n    }\r\n  };\r\n\r\nconst tableLayoutFlow =\r\n  ({ log }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === CHANGE_TABLE_LAYOUT) {\r\n      // log('Table Changed L');\r\n      const type = action.payload;\r\n      if (type === 'L') {\r\n        // dispatch(setDataLaporanStockGlobalProduksiSuccess([]));\r\n      } else {\r\n        // dispatch(setDataLaporanStockGlobalProduksiSuccess([]));\r\n      }\r\n    }\r\n  };\r\n\r\nconst data = [pageLoadedFlow, buttonLoadedFlow, tableLayoutFlow];\r\n\r\nexport default data;\r\n","import Swal from 'sweetalert2';\r\n\r\nfunction Success(message) {\r\n  Swal.fire({\r\n    title: 'Yeaay..',\r\n    text: message,\r\n    icon: 'success',\r\n  });\r\n}\r\n\r\nfunction Failed(message) {\r\n  Swal.fire({\r\n    title: 'Ops..',\r\n    text: message,\r\n    icon: 'error',\r\n  });\r\n}\r\nconst data = { Failed, Success };\r\n\r\nexport default data;\r\n","import { compose, applyMiddleware, createStore } from 'redux';\r\nimport reducers from './reducers';\r\nimport middleware from './middleware';\r\n\r\n// dev tool\r\nconst composeEnhancers =\r\n  (process.env.REACT_APP_NODE_ENV === 'development' &&\r\n  typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === \"undefined\"\r\n  ? (a) => a\r\n  : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose)\r\n\r\n// eslint-disable-next-line\r\nexport const configureStore = (services) =>\r\n  createStore(reducers, composeEnhancers(applyMiddleware(...middleware.map((f) => f(services)))));\r\n","import { message } from 'antd';\r\nimport * as sweetalert from '../../infrastructure/shared/sweetalert';\r\nimport {\r\n  CHECK_LOGIN,\r\n  loginFailed,\r\n  loginSuccess,\r\n  SEND_LOGIN,\r\n  setLoginState,\r\n} from '../actions/login';\r\nimport { setLoading } from '../actions/ui';\r\n\r\n/**\r\n({api}) ADALAH PARAMETER YANG DIDAPAT DARI FOLDER INFRASTRUCTURE -> SERVICES -> API \r\n{ DISINI JUGA BISA MEMANGGIL FOLDER YANG LAIN, SEPERTI LOGGER,\r\n   DLL ASALKAN SUDAH TERDAFTAR DI INDEX SERVICE}\r\n   \r\n */\r\n\r\nconst key = 'updatable';\r\n\r\nconst handleLoginFlow =\r\n  ({ api, writeLocal }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === SEND_LOGIN) {\r\n      dispatch(setLoading(true));\r\n      const data = getState().form.LoginForm.values;\r\n      const response = await api.login.doLogin(data);\r\n      if (response?.value !== null) {\r\n        dispatch(loginSuccess(response?.value));\r\n        writeLocal('userInfo', response?.value);\r\n        sweetalert.default.Success('Berhasil Login');\r\n        dispatch(setLoading(false));\r\n      } else if (data?.user_id === 'admin' && data?.password === 'admin') {\r\n        // sweetalert.default.Success('Berhasil Login');\r\n        dispatch(setLoading(false));\r\n        writeLocal('isLogin', true);\r\n        message.loading({ content: 'Loading...', key });\r\n        setTimeout(() => {\r\n          message.success({ content: 'Login Berhasil!', key, duration: 2 });\r\n          window.location.replace('/amg-cadp-production/dashboard');\r\n        }, 1000);\r\n      } else {\r\n        dispatch(loginFailed(response?.error));\r\n        sweetalert.default.Failed('Coba Check Email Dan Passwordnya..');\r\n        dispatch(setLoading(false));\r\n      }\r\n    }\r\n  };\r\nconst handleCheckLoginFlow =\r\n  ({ api, writeLocal, getLocal }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === CHECK_LOGIN) {\r\n      dispatch(setLoading(true));\r\n      const data = getLocal('isLogin');\r\n      dispatch(setLoginState(data ?? false));\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\nconst data = [handleLoginFlow, handleCheckLoginFlow];\r\n\r\nexport default data;\r\n","// API => call api in infrastructure -> service -> api\r\n// log => for call console.log and dynamic console.log\r\n// writeLocal for write data to local ( dynamic write depend on mode in env) if production its automatically encrypted\r\n// getLocal for get data from local ( dynamic write depend on mode in env) if production its automatically encrypted\r\n// toas for show toast to screen, its have 4 varians (.Success , .Failed, .Warning, .Info)\r\n// sweetalert for show sweetalert to screen, its have 4 varians (.Success , .Failed, .Warning, .Info)\r\n// dispatch for dispactching action, like store data to reducer, and others\r\n// getState is FUNCTION for get current data in your state (reducer), just call getState().yourReducer.yourData\r\n\r\nimport { reset } from 'redux-form';\r\nimport moment from 'moment-timezone';\r\nimport {\r\n  GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  setDataLaporanStockGlobalProduksiLSuccess,\r\n  setDataLaporanStockGlobalProduksiLFailed,\r\n  setDataLaporanStockGlobalProduksiRSuccess,\r\n} from '../actions/laporanstockglobalproduksi';\r\nimport * as sweetalert from '../../infrastructure/shared/sweetalert';\r\nimport { setLoadingButton } from '../actions/ui';\r\n\r\nconst laporanStockGlobalProduksi =\r\n  ({ api, log, writeLocal, getLocal, toast }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI) {\r\n      dispatch(setLoadingButton(true));\r\n      const data = getState().form.FormLaporanGlobalProduksi.values;\r\n      const tgl = new Date(data.date);\r\n      data.date = moment.tz(tgl, 'Asia/Jakarta').format('YYYY-MM-DD');\r\n      delete data.repair;\r\n      const response = await api.laporanStockGlobalProduksi.addLaporanStockGlobalProduksi(data);\r\n      if (response?.value !== null) {\r\n        sweetalert.default.Success('Berhasil Melihat Laporan !');\r\n        writeLocal('tanggal_lap', tgl.toLocaleDateString());\r\n        if (data.tipe_laporan === 'L') {\r\n          dispatch(setDataLaporanStockGlobalProduksiLSuccess(response?.value));\r\n        } else {\r\n          dispatch(setDataLaporanStockGlobalProduksiRSuccess(response?.value));\r\n        }\r\n        dispatch(reset('FormLaporanGlobalProduksi'));\r\n        dispatch(setLoadingButton(false));\r\n      } else {\r\n        dispatch(setDataLaporanStockGlobalProduksiLFailed(response?.error));\r\n        sweetalert.default.Failed('Gagal Melihat Laporan');\r\n        dispatch(setLoadingButton(false));\r\n      }\r\n    }\r\n  };\r\n\r\nconst data = [laporanStockGlobalProduksi];\r\n\r\nexport default data;\r\n","import { GET_ALL_KIRIM_SALDO_TAHUN } from '../actions/kirimsaldotahun';\r\n\r\nconst kirimsaldotahun =\r\n  ({ api, log, writeLocal, getLocal, toast, sweetalert }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === GET_ALL_KIRIM_SALDO_TAHUN) {\r\n      log('test');\r\n    }\r\n  };\r\n\r\nconst data = [kirimsaldotahun];\r\n\r\nexport default data;\r\n","import ui from './ui';\r\nimport login from './login';\r\nimport laporanstockglobalproduksi from './laporanstockglobalproduksi';\r\nimport kirimsaldotahun from './kirimsaldotahun';\r\n\r\nexport default [...ui, ...login, ...laporanstockglobalproduksi, ...kirimsaldotahun];\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport services from './infrastructure/services';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { configureStore } from './application/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={configureStore(services)}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n// serviceWorker.register({\r\n//   onUpdate: (registration) => {\r\n//     const waitingServiceWorker = registration.waiting;\r\n\r\n//     if (waitingServiceWorker) {\r\n//       waitingServiceWorker.addEventListener('statechange', (event) => {\r\n//         if (event.target.state === 'activated') {\r\n//           window.location.reload();\r\n//         }\r\n//       });\r\n//       waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' });\r\n//     }\r\n//   },\r\n// });\r\nserviceWorker.unregister();","export const SEND_LOGIN = '[login] sending login';\r\nexport const CHECK_LOGIN = '[login] check login';\r\nexport const SET_LOGIN_STATE = '[login] set login state';\r\nexport const LOGIN_SUCCESS = '[login] login success';\r\nexport const LOGIN_FAILED = '[login] login failed';\r\n\r\nexport const sendLogin = {\r\n  type: SEND_LOGIN,\r\n};\r\n\r\nexport const loginSuccess = (feedback) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload: feedback,\r\n});\r\n\r\nexport const loginFailed = (error) => ({\r\n  type: LOGIN_FAILED,\r\n  payload: error,\r\n});\r\n\r\nexport const checkLogin = {\r\n  type: CHECK_LOGIN,\r\n};\r\n\r\nexport const setLoginState = (feedback) => ({\r\n  type: SET_LOGIN_STATE,\r\n  payload: {\r\n    data: feedback,\r\n  },\r\n});\r\n","export const GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi R success';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi R failed';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi L success';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi L failed';\r\n\r\nexport const getAllLaporanStockGlobalProduksi = {\r\n  type: GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n};\r\n\r\nexport const setDataLaporanStockGlobalProduksiRFailed = (error) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED,\r\n  payload: { data: error },\r\n});\r\n\r\nexport const setDataLaporanStockGlobalProduksiRSuccess = (feedback) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS,\r\n  payload: { data: feedback },\r\n});\r\n\r\nexport const setDataLaporanStockGlobalProduksiLFailed = (error) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED,\r\n  payload: { data: error },\r\n});\r\n\r\nexport const setDataLaporanStockGlobalProduksiLSuccess = (feedback) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS,\r\n  payload: { data: feedback },\r\n});\r\n"],"sourceRoot":""}