{"version":3,"sources":["infrastructure/shared/style.jsx","views/component/authComponent/login/login_form.jsx","views/pages/login.jsx"],"names":["data","ShowAlert","variant","message","Alert","inputStyle1","input","label","type","meta","touched","error","warning","FloatingLabel","controlId","className","Form","Control","placeholder","Feedback","reduxForm","form","prop","handleSubmit","pristine","submitting","title","style","width","marginTop","marginLeft","onSubmit","Item","Field","name","component","htmltype","disabled","onClick","dispatch","sendLogin","Login","useDispatch","useEffect","pageLoadedLogin","localStorage","getItem","window","location","replace"],"mappings":"+OAoBeA,EADF,CAAEC,UAPG,SAACC,EAASC,GAC1B,OACE,8BACE,cAACC,EAAA,EAAD,CAAOF,QAASA,EAAhB,SAA0BC,OAINE,YAhBN,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAjB,IAAuBC,KAAQC,EAA/B,EAA+BA,QAASC,EAAxC,EAAwCA,MAAOC,EAA/C,EAA+CA,QAA/C,OAClB,eAACC,EAAA,EAAD,CAAeC,UAAU,gBAAgBP,MAAOA,EAAOQ,UAAU,OAAjE,UACE,cAACC,EAAA,EAAKC,QAAN,aAAcT,KAAMA,EAAMU,YAAaX,GAAWD,IACjDI,IACGC,GAAS,cAACK,EAAA,EAAKC,QAAQE,SAAd,CAAuBX,KAAK,UAA5B,SAAuCG,KAC/CC,GAAW,cAACI,EAAA,EAAKC,QAAQE,SAAd,UAAwBP,U,QCuB7BQ,cAAU,CACvBC,KAAM,aADOD,EAxBG,SAACE,GACjB,IAAQC,EAAuCD,EAAvCC,aAAcC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,WAChC,OACE,cAAC,IAAD,CAAMC,MAAM,aAAaC,MAAO,CAAEC,MAAO,OAAQC,UAAW,OAAQC,WAAY,QAAhF,SACE,eAAC,IAAD,CAAMC,SAAUR,EAAhB,UACE,cAAC,IAAKS,KAAN,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,UAAU1B,KAAK,OAAOD,MAAM,QAAQ4B,UAAWR,EAAMtB,gBAEnE,cAAC,IAAK2B,KAAN,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAW1B,KAAK,WAAWD,MAAM,WAAW4B,UAAWR,EAAMtB,gBAE3E,cAAC,IAAD,CACEG,KAAK,UACL4B,SAAS,SACTC,SAAUb,GAAYC,EACtBa,QAAS,kBAAMhB,EAAKiB,SAASC,MAJ/B,4BCFOC,UAXD,WACZ,IAAMF,EAAWG,cAOjB,OANAC,qBAAU,WACRJ,EAASK,KACLC,aAAaC,QAAQ,YACvBC,OAAOC,SAASC,QAAQ,oCAEzB,CAACV,IACG,cAAC,EAAD","file":"static/js/10.3e4aec97.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Alert, FloatingLabel, Form } from 'react-bootstrap';\r\n\r\nconst inputStyle1 = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n  <FloatingLabel controlId=\"floatingInput\" label={label} className=\"mb-3\">\r\n    <Form.Control type={type} placeholder={label} {...input} />\r\n    {touched &&\r\n      ((error && <Form.Control.Feedback type=\"invalid\">{error}</Form.Control.Feedback>) ||\r\n        (warning && <Form.Control.Feedback>{warning}</Form.Control.Feedback>))}\r\n  </FloatingLabel>\r\n);\r\n\r\nconst ShowAlert = (variant, message) => {\r\n  return (\r\n    <div>\r\n      <Alert variant={variant}>{message}</Alert>\r\n    </div>\r\n  );\r\n};\r\nconst data = { ShowAlert, inputStyle1 };\r\nexport default data;\r\n","// import { Button, Card, Form } from 'react-bootstrap';\r\nimport { Form, Button, Card } from 'antd';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from '../../../../infrastructure/shared/style';\r\nimport { sendLogin } from '../../../../application/actions/login';\r\n\r\nconst LoginForm = (prop) => {\r\n  const { handleSubmit, pristine, submitting } = prop;\r\n  return (\r\n    <Card title=\"Form Login\" style={{ width: '50vh', marginTop: '15vh', marginLeft: '80vh' }}>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Item>\r\n          <Field name=\"user_id\" type=\"text\" label=\"Email\" component={style.inputStyle1} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Field name=\"password\" type=\"password\" label=\"Password\" component={style.inputStyle1} />\r\n        </Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmltype=\"button\"\r\n          disabled={pristine || submitting}\r\n          onClick={() => prop.dispatch(sendLogin)}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'LoginForm',\r\n})(LoginForm);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { pageLoadedLogin } from '../../application/actions/ui';\r\nimport LoginForm from '../component/authComponent/login/login_form';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(pageLoadedLogin);\r\n    if (localStorage.getItem('isLogin')) {\r\n      window.location.replace('/amg-cadp-production/dashboard');\r\n    }\r\n  }, [dispatch]);\r\n  return <LoginForm />;\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}